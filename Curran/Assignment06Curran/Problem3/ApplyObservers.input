# ApplyObservers.input

DataBoxItems =
  Subdomain (
    Items =
      #EvaluateScalarFormula(Output=Radius; Formula=sqrt(x0*x0+x1*x1+x2*x2)),
      #EvaluateVectorFormula(Output=Q; V[0]=x0/(R*R*R); V[1]=x1/(R*R*R);
      #                      V[2]=x2/(R*R*R); R=Radius),
      RSquaredFieldCurran(Output=Q),

      GlobalDifferentiator (
        GlobalDifferentiator=Standard(TopologicalDifferentiator=Spectral);
      ),

      FirstDeriv(Output=dQ; Input=Q),
      FlattenDeriv(Output=dQflattened; Input=dQ; DerivPosition=First),

      # We're in flat space; telling SpEC (incorrectly) that we have one lower
      #   and one upper index will take the sum over the diagonal.
      Trace(Output=divQ; Input=dQflattened; Indices=0,1; PositionOfIndices=l,u),
    ; # END Items
  ),
; # END DataBoxItems

Observers =
  NormOfTensor(Input=divQ; Op=L2; Filename=divQ.dat),
; # END Observers

