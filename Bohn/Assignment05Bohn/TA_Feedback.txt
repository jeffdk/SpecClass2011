Problem 1
=========
Method (3) is actually less efficient than method (2).  Since DetF is initialized not with a bare Mesh but with a DataMesh, it actually calls DataMesh's copy constructor.  Reading and copying every element of A(0,0) is slower than just writing 0.0 as in (2).

Problem 2
=========
Regarding your comment on redundancy, I would argue that the ClassIDs for the OneDimDataWriters should NOT correlate with the file extensions.  I would rather they correlated with the name of the class (otherwise they're hard to search for and can confuse people).  If ClassIDs matched file extensions, would you really want your Writer from Problem3 to produce files called "Basename.reduceddat"?  (This is all just my opinion; your answers are otherwise completely correct.)

Could not compile, since BasicMpi.hpp does not have a full path.

Use a .gitignore file to ignore "Executables/Problem2Exec".

Problem 3
=========
Header file lacks #define guards!

No plots committed.

Base class guarantees that x.Size()==y.Size(), so you need only mention this assumption in a comment (though in my opinion, REQUIREing it again is fine).

Is it really the end of the world if inputSize==0?

Comment out name of unused parameter 't' to avoid compiler warnings.

Output from different times is not written to separate files.
